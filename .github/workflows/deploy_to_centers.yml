# .github/workflows/deploy_to_centers.yml
name: Query Runners and Deploy

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: Docker image tag to deploy
        required: true
        type: string
      run_uuid:
        description: Optional run UUID for tracking
        required: false
        type: string

permissions:
  contents: read    # to read centers.json
  actions: none     # we call the runners API with our PAT

jobs:
  check-runners:
    runs-on: ubuntu-latest
    outputs:
      valid_labels:    ${{ steps.filter.outputs.valid_labels }}
      missing_centers: ${{ steps.filter.outputs.missing_centers }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Show centers.json
        run: |
          echo "=== Centers mapping (.github/data/centers.json) ==="
          cat .github/data/centers.json
          echo

      - name: Fetch all org-level self-hosted runners
        id: fetch
        run: |
          echo "Calling GitHub API to list org runners..."
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.ACTIONS_PAT }}" \
            https://api.github.com/orgs/devopgitcs/actions/runners \
          > runners.json

          total=$(jq -r '.total_count' runners.json)
          echo "Total runners returned: $total"
          echo "First few runners (name + labels):"
          jq -r '.runners[] | .name + " → [" + ( .labels[].name // "" ) + "]"' runners.json | head -n 10
          echo

      - name: Filter centers ↔ runner labels
        id: filter
        run: |
          # prepare
          VALID=()
          MISSING=()

          # iterate each center_id
          for center in $(jq -r 'keys_unsorted[]' .github/data/centers.json); do
            label=$(jq -r --arg c "$center" '.[$c]' .github/data/centers.json)
            echo "Checking center '$center' for runner-label '$label'..."

            if jq -e --arg L "$label" '.runners[] | select(.labels[].name == $L)' runners.json > /dev/null; then
              echo "  → Found runner using label '$label'"
              VALID+=("$label")
            else
              echo "  → No runner with label '$label'"
              MISSING+=("$center")
            fi
          done

          # print summary
          echo
          echo "Summary:"
          echo "  Valid runner labels: ${VALID[*]:-<none>}"
          echo "  Missing centers:     ${MISSING[*]:-<none>}"
          echo

          # helper to JSON‑ify a bash array
          to_json() {
            printf '%s\n' "$@" | jq -R . | jq -s -c .
          }

          # write outputs
          echo "valid_labels=$(to_json "${VALID[@]}")"    >> $GITHUB_OUTPUT
          echo "missing_centers=$(to_json "${MISSING[@]}")" >> $GITHUB_OUTPUT

      - name: Warn about missing centers
        if: ${{ steps.filter.outputs.missing_centers != '[]' }}
        run: |
          echo "WARNING: skipping these centers (no runner found):"
          echo "  ${{ steps.filter.outputs.missing_centers }}"

      - name: Fail if no runners available
        if: ${{ steps.filter.outputs.valid_labels == '[]' }}
        run: |
          echo "ERROR: no valid self-hosted runners found; exiting."
          exit 1

  deploy:
    needs: check-runners
    strategy:
      matrix:
        label: ${{ fromJson(needs.check-runners.outputs.valid_labels) }}
    runs-on:
      - self-hosted
      - ${{ matrix.label }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Deploy with Docker Compose
        run: |
          echo "=== Deployment ==="
          echo "Runner label: ${{ matrix.label }}"
          echo "Image tag:    ${{ inputs.tag_name }}"
          [ -n "${{ inputs.run_uuid }}" ] && echo "Run UUID:     ${{ inputs.run_uuid }}"
          echo
          docker-compose pull
          docker-compose up -d --build
          docker-compose ps
