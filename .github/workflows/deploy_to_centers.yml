name: Query Runners and Deploy

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: Docker image tag to deploy
        required: true
        type: string
      run_uuid:
        description: (optional) run uuid for tracking
        required: false
        type: string

permissions:
  contents: read   # to pull down centers.json
  actions: none    # we use our PAT for the runners API call

jobs:
  check-runners:
    runs-on: ubuntu-latest
    outputs:
      valid_labels:    ${{ steps.filter.outputs.valid_labels }}
      missing_centers: ${{ steps.filter.outputs.missing_centers }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Fetch organization runners
        id: fetch
        run: |
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.ACTIONS_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/devopgitcs/actions/runners \
          > runners.json

      - name: Filter centers ↔ runner labels
        id: filter
        run: |
          VALID=()
          MISSING=()

          # for each center_id in centers.json
          for center in $(jq -r 'keys_unsorted[]' .github/data/centers.json); do
            # look up its runner label
            label=$(jq -r --arg c "$center" '.[$c]' .github/data/centers.json)

            # if any runner carries that label, accept it
            if jq -e --arg L "$label" '.runners[] | select(.labels[].name == $L)' runners.json >/dev/null; then
              VALID+=("$label")
            else
              MISSING+=("$center")
            fi
          done

          # helper: bash‑array → compact JSON array
          to_json() { printf '%s\n' "$@" | jq -R . | jq -s -c .; }

          echo "valid_labels=$(to_json "${VALID[@]}")"   >> $GITHUB_OUTPUT
          echo "missing_centers=$(to_json "${MISSING[@]}")" >> $GITHUB_OUTPUT

      - name: Log any missing centers
        if: ${{ steps.filter.outputs.missing_centers != '[]' }}
        run: |
          echo "Skipping centers with no runner found: ${{ steps.filter.outputs.missing_centers }}"

      - name: Fail if no runners available
        if: ${{ steps.filter.outputs.valid_labels == '[]' }}
        run: |
          echo "Error: No valid self‑hosted runners found. Exiting."
          exit 1

  deploy:
    needs: check-runners
    strategy:
      matrix:
        # matrix over *actual* runner labels we discovered
        label: ${{ fromJson(needs.check-runners.outputs.valid_labels) }}
    runs-on: [ self-hosted, ${{ matrix.label }} ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Deploy with Docker Compose
        run: |
          # you can pick up inputs if you like:
          echo "Deploying runner label: ${{ matrix.label }}"
          echo "Using image tag:     ${{ inputs.tag_name }}"
          [ -n "${{ inputs.run_uuid }}" ] && echo "Run UUID:            ${{ inputs.run_uuid }}"

          # pull/build + launch your existing docker-compose.yml
          docker-compose pull
          docker-compose up -d --build
          docker-compose ps
