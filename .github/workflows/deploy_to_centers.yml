# .github/workflows/deploy_to_centers.yml
name: Deploy to Centers

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: Docker image tag to deploy
        required: true
        type: string
      run_uuid:
        description: Optional run UUID for tracking
        required: false
        type: string

permissions:
  contents: read   # to load .github/data/centers.json
  actions: none    # REST API calls use our PAT

jobs:
  check-runners:
    runs-on: ubuntu-latest
    outputs:
      valid_centers:   ${{ steps.filter.outputs.valid_centers }}
      missing_centers: ${{ steps.filter.outputs.missing_centers }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show centers.json
        run: |
          echo "=== .github/data/centers.json ==="
          cat .github/data/centers.json
          echo

      - name: Fetch org‑level self‑hosted runners
        id: fetch
        run: |
          echo "Fetching self‑hosted runners from org via REST API…"
          curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.ACTIONS_PAT }}" \
            https://api.github.com/orgs/devopgitcs/actions/runners \
          > runners.json
          echo "=== runners.json ==="
          cat runners.json
          echo

      - name: Filter valid vs missing centers (with debug)
        id: filter
        run: |
          VALID=()
          MISSING=()

          echo "Starting filter loop…"
          for center in $(jq -r 'keys_unsorted[]' .github/data/centers.json); do
            label=$(jq -r --arg c "$center" '.[$c]' .github/data/centers.json)
            echo "- Center: '$center' → looking for runner‑label: '$label'"

            if jq -e --arg L "$label" \
                    '.runners[] | select(.status=="online" and .labels[].name==$L)' \
                    runners.json >/dev/null; then
              echo "    ✓ Found an online runner with label '$label'"
              VALID+=("$center")
            else
              echo "    ✗ No online runner for label '$label'"
              MISSING+=("$center")
            fi
          done

          echo
          echo "Collected VALID centers:   ${VALID[*]:-<none>}"
          echo "Collected MISSING centers: ${MISSING[*]:-<none>}"
          echo

          to_json() {
            [ $# -eq 0 ] && { echo '[]'; return; }
            printf '%s\n' "$@" | jq -R . | jq -s -c .
          }

          valid_json=$(to_json "${VALID[@]}")
          missing_json=$(to_json "${MISSING[@]}")

          echo "valid_centers=$valid_json"    >> $GITHUB_OUTPUT
          echo "missing_centers=$missing_json" >> $GITHUB_OUTPUT

      - name: Show filtering results in outputs
        run: |
          echo "→ Step‑outputs.valid_centers:   ${{ steps.filter.outputs.valid_centers }}"
          echo "→ Step‑outputs.missing_centers: ${{ steps.filter.outputs.missing_centers }}"

      - name: Warn about missing centers
        if: ${{ steps.filter.outputs.missing_centers != '[]' }}
        run: |
          echo "WARNING: skipping centers: ${{ steps.filter.outputs.missing_centers }}"

      - name: Fail if no centers remain
        if: ${{ steps.filter.outputs.valid_centers == '[]' }}
        run: |
          echo "ERROR: no valid centers remain – exiting."
          exit 1

  dispatch-deploy:
    needs: check-runners
    runs-on: ubuntu-latest
    strategy:
      matrix:
        center: ${{ fromJson(needs.check-runners.outputs.valid_centers) }}

    steps:
      - name: Dispatch per‑center Docker‑Compose Deploy
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.ACTIONS_PAT }}
          workflow: docker_compose_deploy.yml
          ref: main
          inputs: |
            {
              "tag_name": "${{ inputs.tag_name }}",
              "run_uuid": "${{ inputs.run_uuid }}",
              "center_id": "${{ matrix.center }}"
            }
