name: Query Runners and Deploy

on:
  workflow_dispatch:
    inputs:
      tag_name:
        required: true
        type: string
      run_uuid:
        required: false
        type: string

jobs:
  check-runners:
    runs-on: ubuntu-latest
    permissions:
      contents: read      # to read centers.json
      actions: none       # we call the Actions API with our PAT
    outputs:
      valid_centers:   ${{ steps.filter.outputs.valid_centers }}
      missing_centers: ${{ steps.filter.outputs.missing_centers }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Load Centers Mapping
        id: load
        run: |
          # centers.json is e.g. { "css_center":"css-label-1", "demo_center":"no-such-label" }
          CENTER_IDS=$(jq -c 'keys' .github/data/centers.json)
          echo "CENTER_IDS=$CENTER_IDS" >> $GITHUB_ENV

      - name: Fetch Repo‑Level Runners
        id: fetch
        run: |
          curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.ACTIONS_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/devopgitcs/test_centers/actions/runners \
            > runners.json

      - name: Filter Available vs Missing Centers
        id: filter
        run: |
          VALID=()
          MISSING=()

          for center in $(echo "${{ env.CENTER_IDS }}" | jq -r '.[]'); do
            label=$(jq -r --arg C "$center" '.[$C]' .github/data/centers.json)
            if jq -e --arg L "$label" '.runners[] | select(.labels[].name == $L)' runners.json > /dev/null; then
              VALID+=("$center")
            else
              MISSING+=("$center")
            fi
          done

          # Helper: turn Bash arrays into JSON
          to_json() {
            if [ $# -eq 0 ]; then
              echo '[]'
            else
              printf '%s\n' "$@" | jq -R . | jq -s .
            fi
          }

          echo "valid_centers=$(to_json "${VALID[@]}")"   >> $GITHUB_OUTPUT
          echo "missing_centers=$(to_json "${MISSING[@]}")" >> $GITHUB_OUTPUT

      - name: Warn About Missing Centers
        if: ${{ steps.filter.outputs.missing_centers != '[]' }}
        run: |
          echo "⚠️  Skipping centers with no matching runner-label:"
          echo "${{ steps.filter.outputs.missing_centers }}"

      - name: Fail If None Available
        if: ${{ steps.filter.outputs.valid_centers == '[]' }}
        run: |
          echo "❌  No valid centers found—exiting."
          exit 1

  deploy:
    needs: check-runners
    strategy:
      matrix:
        center: ${{ fromJson(needs.check-runners.outputs.valid_centers) }}
    runs-on: ${{ matrix.center }}

    steps:
      - name: Dispatch Docker Compose Deploy
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: docker_compose_deploy.yml
          token: ${{ secrets.ACTIONS_PAT }}
          inputs: |
            {
              "tag_name": "${{ inputs.tag_name }}",
              "run_uuid": "${{ inputs.run_uuid }}",
              "center_id": "${{ matrix.center }}"
            }
